@using WEBPCTSV.Helpers
@using WEBPCTSV.Models.bean
@{
    ViewBag.Title = "Cập nhật thông tin biểu mẫu xét điểm rèn luyện";
    Layout = "~/Views/Shared/_LayoutManager.cshtml";
}

<ol class="breadcrumb box-shadow">
    <li>
        <a href="#">Trang chủ</a>
    </li>
    <li>
        <a href="/QuanLy/QuanLyRenLuyen">Quản lý điểm rèn luyện</a>
    </li>
    <li>
        <a href="/QuanLy/QuanLyRenLuyen/MauXetRenLuyen">Biểu mẫu đánh giá</a>
    </li>
    <li class="active">Cập nhật</li>
</ol>
<div class="main-content">
    <div class="form-info">
        @using (Html.BeginForm(string.Empty, string.Empty, FormMethod.Post, new { @id = "fUpdate" }))
        {
            <input type="hidden" class="item-isvalid" name="isValid" value="">
            <input class="hidden" name="idConductForm" value="@ViewBag.conductForm.IdConductForm" readonly/>
            <input type="hidden" class="item-count" name="itemCount" value="0">
            <div class="form-group">
                <label>Tên biểu mẫu</label>
                <div>
                    <input class="form-control" name="name" value="@ViewBag.conductForm.Name"/>
                </div>
            </div>
            <div class="form-group">
                <label>Ghi chú</label>
                <div>
                    <input class="form-control" name="note" value="@ViewBag.conductForm.Note"/>
                </div>
            </div>

            <div class="form-group">
                <label>Danh mục đánh giá</label>
                <p>
                    <span class="color-danger">Lưu ý:</span></p>
                <p class="color-danger">- Thay đổi tên danh mục đánh giá sẽ không làm ảnh hưởng đến kết quả đánh giá sinh viên.</p>
                <p class="color-danger">- Thay đổi các thông tin khác của danh mục đánh giá (Điểm tối đa, nhóm đánh giá, xóa, thêm mới) sẽ làm thay đổi thông tin kết quả đánh giá rèn luyện của sinh viên đã đánh giá! Hãy cân nhắc kỹ trước khi thay đổi thông tin biểu mẫu đánh giá!</p>

                <div>
                    <span class="btn btn-primary btn-sm add-formitem" onclick="addItem('section', '-1');"><i class="fa fa-plus fa-xs"></i> Thêm mục đánh giá</span>
                </div>
                <div class="info-box-content">
                    <div class="conduct-title">
                        <div class="col-xs-7 col-title">
                            <p>
                                <strong>Nội dung đánh giá</strong>
                            </p>
                        </div>
                        <div class="col-xs-2">
                            <strong>Tối đa</strong>
                        </div>
                        <div class="col-xs-2">
                            <strong>Nhóm</strong>
                        </div>
                        <div class="col-xs-1"></div>
                    </div>
                    @{
                        int index = 0;
                    }
                    @foreach (ConductItem conductItem in ViewBag.conductForm.ConductItems)
                    {
                        <div class="conduct-item section" id="D@(conductItem.ItemIndex)">
                            <input type="hidden" class="index" name="Index@(index)" value="@conductItem.ItemIndex">
                            <input type="hidden" class="id" name="ID@(conductItem.ItemIndex)" value="@conductItem.IdConductItems">
                            <div class="col-xs-7">
                                <span class="col-xs-1 col-title"></span>
                                <div class="col-xs-11">
                                    <textarea name="T" row="2" class="col-xs-12 form-control" placeholder="Nhập vào tiêu đề mục">@conductItem.ItemName</textarea>
                                </div>
                            </div>
                            <div class="col-xs-2 col-point">
                                <input class="col-xs-12 form-control max-point" type="text" name="P@(conductItem.ItemIndex)" value="@conductItem.MaxPoints"/>
                            </div>
                            <div class="col-xs-2 col-point">
                                <select class="form-control item-group">
                                    @foreach (var conductItemGroup in ViewBag.conductItemGroups)
                                    {
                                        <option value="@conductItemGroup.IdConductItemGroup" @(conductItem.IdConductItemGroup == conductItemGroup.IdConductItemGroup ? "selected" : string.Empty)>
                                            @conductItemGroup.ConductItemGroupName
                                        </option>
                                    }
                                </select>
                            </div>
                            <div class="col-xs-1 group-btn">
                                @if (conductItem.ItemIndex.Length != Define.ItemType.CommentTwo)
                                {
                                    <div data-placement="left" data-tooltip="true" onclick="" title="Thêm mục" class="btn btn-primary btn-sm item-add">
                                        <i class="fa fa-plus"></i>
                                    </div>
                                }
                                <div data-tooltip="true" data-placement="left" title="Xóa" class="btn btn-danger btn-sm item-remove" onclick="">
                                    <i class="fa fa-trash"></i>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="group-btn text-center">
                <button type="submit" class="btn btn-success"><i class="fa fa-check"></i> Cập nhật</button>
            </div>
        }
    </div>
</div>
<div class="group-evaluate hide">
    <select class="form-control item-group">
        @foreach (ConductItemGroup conductItemGroup in ViewBag.conductItemGroups)
        {
            <option value="@conductItemGroup.IdConductItemGroup">
                @conductItemGroup.ConductItemGroupName
            </option>
        }
    </select>
</div>

<script src="~/js/jquery.validate.js" type="text/javascript"></script>
<script>
    function updateConductForm() {
        $.ajax({
            type: 'POST',
            data: $('#fUpdate').serialize(),
            url: '/QuanLy/QuanLyRenLuyen/MauXetRenLuyen/CapNhat',
            beforeSend: function() {
                loadIconLoading($('.cssload-container-over'));
                $('.cssload-container-over').append('Đang xử lý dữ liệu!');
                $('.cssload-container-over').fadeIn();
                $('.modal-announcement-message').hide();
                $('.modal-announcement-message').html('');
                $('#modal-announcement').modal("show");
            },
            success: function(response) {
                $('.cssload-container-over').hide();
                unloadIconLoading($('.cssload-container-over'));
                if (response.success == true) {
                    $('.modal-announcement-message').html(response.responseText);
                } else {
                    $('.modal-announcement-message').html(response.responseText);
                }
                $('.modal-announcement-message').fadeIn();
            },

            error: function(response) {
                $('.cssload-container-over').hide();
                unloadIconLoading($('.cssload-container-over'));
                $('.modal-announcement-message').html('Lỗi cập nhật dữ liệu!');
                $('.modal-announcement-message').fadeIn();
            }
        });
    }


    function addItem(type, id) {
        if (type == "section") {
            sectionHtml = '<div class="conduct-item section" id="D01">' +
                '<input type="hidden" class="index" name="Index1" value="01">' +
                '<div class="col-xs-7"><span class="col-xs-1 col-title"></span><div class="col-xs-11">' +
                '<textarea name="T" row="2" class="col-xs-12 form-control" placeholder="Nhập vào tiêu đề mục"></textarea></div></div>' +
                '<div class="col-xs-2 col-point"><input class="col-xs-12 form-control max-point" type="text" name="P11" value=""/></div>' +
                '<div class="col-xs-2 col-point">' +
                $('.group-evaluate').html() +
                '</div>' +
                '<div class="col-xs-1 group-btn">' +
                '<div data-placement="left" data-tooltip="true" onclick="" title="Thêm mục" class="btn btn-primary btn-sm item-add"><i class="fa fa-plus"></i></div> <div data-tooltip="true" data-placement="left" title="Xóa" class="btn btn-danger btn-sm item-remove" onclick=""><i class="fa fa-trash"></i></div></div></div>';
            if (id == "-1") {
                $(".info-box-content").append(sectionHtml);
            }
        } else if (type == "item") {
            // Create new id of item D01
            primaryIdNumber = parseInt(id.substr(1));
            text = '.info-box-content #' +
                id.substr(0, 1) +
                ((primaryIdNumber + 1) < 10 ? '0' + (primaryIdNumber + 1) : (primaryIdNumber + 1));
            nextItem = $(text);
            console.log(primaryIdNumber + '  ' + text);
            itemHtml = '<div class="conduct-item normal ' +
                id +
                '" id="D0101">' +
                '<input type="hidden" name="Index1" class="index" value="0101">' +
                '<div class="col-xs-7"><span class="col-xs-1 col-title"></span>' +
                '<div class="col-xs-11"><textarea name="T11" row="1" class="col-xs-12 form-control" placeholder="Nhập vào nội dung"></textarea></div></div>' +
                '<div class="col-xs-2 col-point"><input class="col-xs-12 form-control max-point" type="text" name="P11" value=""/></div>' +
                '<div class="col-xs-2 col-point">' +
                $('.group-evaluate').html() +
                '</div>' +
                '<div class="col-xs-1 group-btn"><div data-placement="left" data-tooltip="true" onclick="" title="Thêm mục" class="btn btn-primary btn-sm item-add"><i class="fa fa-plus"></i></div>' +
                ' <div data-tooltip="true" data-placement="left" title="Xóa" class="btn btn-danger btn-sm item-remove" onclick=""><i class="fa fa-trash"></i></div></div></div>';
            if (nextItem.length > 0) {
                nextItem.before(itemHtml);
            } else {
                primaryItem = $('.info-box-content');
                primaryItem.append(itemHtml);
            }
        } else if (type == "comment-one") {
            // Create new id of item D0101
            // Check if have next item D0102
            primaryIdNumber = parseInt(id.substr(id.length - 2, id.length));
            nextItem = $('.info-box-content #' + id.substr(0, 2) + (primaryIdNumber + 1));
            text = '.info-box-content #' +
                id.substr(0, id.length - 2) +
                ((primaryIdNumber + 1) < 10 ? '0' + (primaryIdNumber + 1) : (primaryIdNumber + 1));
            nextItem = $(text);
            //Check next item D01
            if (nextItem.length <= 0) {
                primaryIdNumber = parseInt(id.substr(1, 2));
                text = '.info-box-content #' +
                    id.substr(0, 1) +
                    ((primaryIdNumber + 1) < 10 ? '0' + (primaryIdNumber + 1) : (primaryIdNumber + 1));
                nextItem = $(text);
            }
            console.log(primaryIdNumber + '  ' + text + '    ' + id.substr(1));
            commentOneHtml = '<div class="conduct-item comment ' +
                id +
                '" id="D010101">' +
                '<input type="hidden" name="Index1" class="index" value="010101">' +
                '<div class="col-xs-7"><span class="col-xs-1 col-title"></span>' +
                '<div class="col-xs-11"><textarea name="T111" row="1" class="col-xs-12 form-control" placeholder="Nhập vào nội dung"></textarea></div></div>' +
                '<div class="col-xs-2 col-point"><input class="col-xs-12 form-control max-point" type="text" name="P111" value=""/></div>' +
                '<div class="col-xs-2 col-point">' +
                $('.group-evaluate').html() +
                '</div>' +
                '<div class="col-xs-1 group-btn"><div data-placement="left" data-tooltip="true" onclick="" title="Thêm mục" class="btn btn-primary btn-sm item-add"><i class="fa fa-plus"></i></div>' +
                ' <div data-tooltip="true" data-placement="left" title="Xóa" class="btn btn-danger btn-sm item-remove" onclick=""><i class="fa fa-trash"></i></div></div></div>';
            if (nextItem.length > 0) {
                // Have next item exist, so insert comment before this item
                nextItem.before(commentOneHtml);
            } else {
                // Check if have next section exist
                primaryIdNumber = parseInt(id.charAt(id.length - 2));
                nextItem = $('.info-box-content #D' + (primaryIdNumber + 1));
                if (nextItem.length > 0) {
                    // Have next section exist, so insert comment before this section
                    nextItem.before(commentOneHtml);
                } else {
                    // Nothing after this item, so we insert into end of main div
                    primaryItem = $('.info-box-content');
                    primaryItem.append(commentOneHtml);
                }
            }
        } else if (type == "comment-two") {
            // Create new id of item D231
            var lastItem = $('.info-box-content .' + id + ':last');
            primaryIdNumber = id.substr(1, 3);
            commentTwoHtml = '<div class="conduct-item comment ' +
                id +
                '" id="D01010101">' +
                '<input type="hidden" name="Index1" class="index" value="01010101">' +
                '<div class="col-xs-7"><span class="col-xs-1 col-title"></span>' +
                '<div class="col-xs-11"><textarea name="T1111" row="1" class="col-xs-12 form-control" placeholder="Nhập vào nội dung"></textarea></div></div>' +
                '<div class="col-xs-2 col-point"><input class="col-xs-12 form-control max-point" type="text" name="P1111" value=""/></div>' +
                '<div class="col-xs-2 col-point">' +
                $('.group-evaluate').html() +
                '</div>' +
                '<div class="col-xs-1 group-btn"><div data-tooltip="true" data-placement="left" title="Xóa" class="btn btn-danger btn-sm item-remove" onclick=""><i class="fa fa-trash"></i></div></div></div>';
            if (lastItem.length > 0) {
                lastItem = $('.info-box-content .' + id + ':last');
            } else {
                lastItem = $('.info-box-content #' + id);
            }
            lastItem.after(commentTwoHtml);
        }
        // Refresh all index
        refreshIndex();
    }

    function acceptRemove(id) {
        if (id.length == 9) {
            //$('#' + id).fadeOut(600, function () {
            removeItem(id);
            //});
        } else if (id.length == 7) {
            var commentItems = $('.' + id);
            $.each(commentItems,
                function() {
                    acceptRemove($(this).attr('id'));
                });
            //$('#' + id).fadeOut(600, function () {
            removeItem(id);
            //});
        } else if (id.length == 5) {

            var commentItems = $('.' + id);
            $.each(commentItems,
                function() {
                    acceptRemove($(this).attr('id'));
                });
            //$("#" + id).fadeOut(600, function () {
            removeItem(id);
            //});
        } else if (id.length == 3) {
            var commentItems = $('.' + id);
            $.each(commentItems,
                function() {
                    acceptRemove($(this).attr('id'));
                });
            //$("#" + id).fadeOut(600, function () {
            removeItem(id);
            //});
        }
        // Refresh all index
        refreshIndex();
    }

    function removeItem(id) {
        idItem = $('#' + id + ' .id');
        // if item inserted to database
        if (idItem.length > 0) {
            idItem = idItem.val();
            $.ajax({
                type: 'POST',
                data: {
                    id: idItem
                },
                url: '/QuanLy/QuanLyRenLuyen/MauXetRenLuyen/XoaMucDanhGia',
                success: function(response) {
                    if (response.success == true) {
                        $("#" + id).remove();
                        $('#modal-announcement').modal('hide');
                    } else {
                        $('.modal-announcement-message').html(response.responseText);

                    }
                },
                error: function(response) {
                    $('.modal-announcement-message').html(response.responseText);
                },
            });
        } else {
            $("#" + id).remove();
            $('#modal-announcement').modal('hide');
        }
    }


    function removeItemConfirm(id) {
        content = '<p>Sau khi xóa mục đánh giá. Bạn không thể khôi phục lại được.<br />' +
            'Bạn có chắc muốn xóa mục đánh giá này không ?</p>';
        $('#modal-announcement .modal-dialog .modal-content .modal-footer')
            .html('<button type="button" onclick="acceptRemove(\'' +
                id +
                '\')" class="btn btn-danger">Xác nhận</button>  <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>')
        $('.modal-announcement-message').html(content);
        $('#modal-announcement').modal('show');
    }


    function refreshIndex() {
        $('[data-tooltip="true"]').tooltip();
        //alert("xx");
        var items = $(".info-box-content .conduct-item");
        indexSection = 0;
        indexItem = 0;
        indexCommentOne = 0;
        indexCommentTwo = 0;
        count = 0;
        $.each(items,
            function() {
                var id = $(this).attr("id");
                if (id.length == 3) {
                    if (indexSection < 9) {
                        indexSectionStr = '0' + (++indexSection);
                    } else {
                        indexSectionStr = (++indexSection);
                    }
                    // Section item
                    $(this).children('.col-xs-7').children('.col-title').text(IntToRoman(parseInt(indexSectionStr)));

                    // Fix attribute class
                    $(this).attr('id', 'D' + indexSectionStr);
                    $('#D' + indexSectionStr + ' .index').attr('name', 'Index' + (++count));
                    $('#D' + indexSectionStr + ' .index').val(indexSectionStr);
                    $('#D' + indexSectionStr + ' textarea').attr('name', 'Title' + indexSectionStr);
                    $('#D' + indexSectionStr + ' .col-point .max-point').attr('name', 'Point' + indexSectionStr);
                    $('#D' + indexSectionStr + ' select').attr('name', 'Group' + indexSectionStr);
                    $('#D' + indexSectionStr + ' .group-btn .item-add')
                        .attr('onclick', 'addItem(\'item\', \'D' + indexSectionStr + '\');');
                    $('#D' + indexSectionStr + ' .group-btn .item-remove')
                        .attr('onclick', 'removeItemConfirm(\'D' + indexSectionStr + '\');');
                    // initialize indexItem
                    indexItem = 0;
                } else if (id.length == 5) {
                    // Main item
                    $(this).children('.col-xs-7').children('.col-title').text(++indexItem);
                    //Init string index
                    if (indexSection < 9) {
                        indexSectionStr = '0' + (indexSection);
                    } else {
                        indexSectionStr = (indexSection);
                    }
                    if (indexItem < 10) {
                        indexItemStr = '0' + (indexItem);
                    } else {
                        indexItemStr = (indexItem);
                    }

                    // Fix attribute class
                    idItem = indexSectionStr + '' + indexItemStr;
                    $(this).attr('id', 'D' + idItem);
                    $(this).attr('class', 'conduct-item normal D' + indexSectionStr);
                    $('#D' + idItem + ' .index').attr('name', 'Index' + (++count));
                    $('#D' + idItem + ' .index').val(idItem);
                    $('#D' + idItem + ' textarea').attr('name', 'Title' + idItem);
                    $('#D' + idItem + ' .col-point .max-point').attr('name', 'Point' + idItem);
                    $('#D' + idItem + ' select').attr('name', 'Group' + idItem);
                    $('#D' + idItem + ' .group-btn .item-add')
                        .attr('onclick', 'addItem(\'comment-one\', \'D' + idItem + '\');');
                    $('#D' + idItem + ' .group-btn .item-remove')
                        .attr('onclick', 'removeItemConfirm(\'D' + idItem + '\');');

                    // initialize index of comment item
                    indexCommentOne = 0;
                } else if (id.length == 7) {
                    // Comment one item
                    $(this).children('.col-xs-7').children('.col-title').text('-');
                    if (indexSection < 9) {
                        indexSectionStr = '0' + (indexSection);
                    } else {
                        indexSectionStr = (indexSection);
                    }
                    if (indexItem < 10) {
                        indexItemStr = '0' + (indexItem);
                    } else {
                        indexItemStr = (indexItem);
                    }
                    if (indexCommentOne < 9) {
                        indexCommentOneStr = '0' + (++indexCommentOne);
                    } else {
                        indexCommentOneStr = (++indexCommentOne);
                    }
                    console.log('conmment one ' + indexCommentOneStr);

                    // Fix attribute class
                    idItem = indexSectionStr + '' + indexItemStr + '' + indexCommentOneStr;
                    $(this).attr('id', 'D' + idItem);
                    $(this).attr('class', 'conduct-item comment D' + indexSectionStr + indexItemStr);
                    $('#D' + idItem + ' .index').attr('name', 'Index' + (++count));
                    console.log('#D' + idItem + ' .index')
                    $('#D' + idItem + ' .index').val(idItem);
                    $('#D' + idItem + ' textarea').attr('name', 'Title' + idItem);
                    $('#D' + idItem + ' .col-point .max-point').attr('name', 'Point' + idItem);
                    $('#D' + idItem + ' select').attr('name', 'Group' + idItem);
                    $('#D' + idItem + ' .group-btn .item-add')
                        .attr('onclick', 'addItem(\'comment-two\', \'D' + idItem + '\');');
                    $('#D' + idItem + ' .group-btn .item-remove')
                        .attr('onclick', 'removeItemConfirm(\'D' + idItem + '\');');

                    // initialize index of comment item
                    indexCommentTwo = 0;
                } else if (id.length == 9) {
                    // Comment two item
                    $(this).children('.col-xs-7').children('.col-title').text('+');
                    if (indexSection < 9) {
                        indexSectionStr = '0' + (indexSection);
                    } else {
                        indexSectionStr = (indexSection);
                    }
                    if (indexItem < 10) {
                        indexItemStr = '0' + (indexItem);
                    } else {
                        indexItemStr = (indexItem);
                    }
                    if (indexCommentOne < 9) {
                        indexCommentOneStr = '0' + (indexCommentOne);
                    } else {
                        indexCommentOneStr = (indexCommentOne);
                    }
                    if (indexCommentTwo < 9) {
                        indexCommentTwoStr = '0' + (++indexCommentTwo);
                    } else {
                        indexCommentTwoStr = (++indexCommentTwo);
                    }
                    // Fix attribute class
                    idItem = indexSectionStr + '' + indexItemStr + '' + indexCommentOneStr + '' + indexCommentTwoStr;
                    $(this).attr('id', 'D' + idItem);
                    $(this)
                        .attr('class', 'conduct-item comment D' + indexSectionStr + indexItemStr + indexCommentOneStr);
                    $('#D' + idItem + ' .index').attr('name', 'Index' + (++count));
                    $('#D' + idItem + ' .index').val(idItem);
                    $('#D' + idItem + ' textarea').attr('name', 'Title' + idItem);
                    $('#D' + idItem + ' .col-point .max-point').attr('name', 'Point' + idItem);
                    $('#D' + idItem + ' select').attr('name', 'Group' + idItem);
                    $('#D' + idItem + ' .group-btn .item-remove')
                        .attr('onclick', 'removeItemConfirm(\'D' + idItem + '\');');
                }
            });
        $('.item-count').val(count);
        removeRules();
        addRules();
        $('.conduct-item')
            .each(function(e) {
                $(this).attr('onchange', 'checkPointValid()');
            });
    }

    function removeRules() {
        $('.conduct-item textarea')
            .each(function(e) {
                $(this).rules('remove');
            });
        $('.conduct-item input[class="col-xs-12 form-control max-point"]')
            .each(function(e) {
                $(this).rules('remove');
            });
    }

    function addRules() {
        $('.conduct-item textarea')
            .each(function(e) {
                $(this)
                    .rules("add",
                    {
                        required: true
                    });
                $(this)
                    .rules("add",
                    {
                        messages: {
                            required: "Chưa nhập nội dung đánh giá!"
                        }
                    });
            });
        $('.conduct-item input[class="col-xs-12 form-control max-point"]')
            .each(function(e) {
                $(this)
                    .rules("add",
                    {
                        digits: true,
                        min: 0,
                        required: true
                    });
                $(this)
                    .rules("add",
                    {
                        messages: {
                            min: "Điểm tối thiểu là 0",
                            digits: "Sai định dạng số",
                            required: "Chưa nhập điểm"
                        }
                    });
            });
    }

    function IntToRoman(num) {
        var thou = ["", "M", "MM", "MMM"];
        var hun = ["", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"];
        var ten = ["", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"];
        var ones = ["", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"];
        roman = "";
        roman += thou[parseInt((num / 1000) % 10)];
        roman += hun[parseInt((num / 100) % 10)];
        roman += ten[parseInt((num / 10) % 10)];
        roman += ones[num % 10];
        return roman;
    }

    function checkPointValid() {
        totalSection = 0;
        $('.conduct-item')
            .each(function(e) {
                if ($(this).attr('id').length == 3) {
                    maxPoint = $(this).children('.col-point').children('.max-point').val();
                    totalSection += parseInt(maxPoint);
                } else {
                    idParent = $(this).attr('class').split(' ')[2];
                    maxPoint = $('#' + idParent).children('.col-point').children('.max-point').val();
                    //console.log(idParent + '   '+maxPoint);
                    totalPoint = 0;
                    $('.' + idParent)
                        .each(function(e) {
                            maxPointItem = $(this).children('.col-point').children('.max-point').val();
                            totalPoint += parseInt(maxPointItem);
                        });
                    if (totalPoint != maxPoint) {
                        divError = $('#' + idParent + ' .color-danger');
                        if (divError.length > 0) {
                            divError.html('<p class="color-danger col-xs-12">Tổng điểm các mục đánh giá phải bằng ' +
                                maxPoint +
                                ' điểm! Kiểm tra lại thông tin.</p>');
                        } else {
                            $('#' + idParent)
                                .append('<p class="color-danger col-xs-12">Tổng điểm các mục đánh giá phải bằng ' +
                                    maxPoint +
                                    ' điểm! Kiểm tra lại thông tin.</p>');
                        }
                    } else {
                        $('#' + idParent + ' .color-danger').remove();
                    }
                }
            });
        if (!isNaN(totalSection)) {
            if (totalSection != 100) {
                divError = $('.error-section');
                if (divError.length > 0) {
                    divError
                        .html('<p class="error-section alert alert-danger col-xs-12">Tổng điểm các mục đánh giá phải bằng 100 điểm! Kiểm tra lại thông tin.</p>');
                } else {
                    $('.conduct-title')
                        .after('<p class="error-section alert alert-danger col-xs-12">Tổng điểm các mục đánh giá phải bằng 100 điểm! Kiểm tra lại thông tin.</p>');
                }
            } else {
                $('.error-section').remove();
            }
        }
    }

    $(document)
        .ready(function() {
            $('.conduct-item')
                .each(function(e) {
                    $(this).attr('onchange', 'checkPointValid()');
                });
            $('#fUpdate')
                .validate(
                {
                    rules: {
                        name: {
                            required: true,
                        },
                        isValid: {
                            required: true,
                        }
                    },
                    messages: {
                        name: {
                            required: "Chưa nhập tên mẫu đánh giá!",
                        },
                    },
                    submitHandler: function(form) {
                        updateConductForm();
                    }
                });
            refreshIndex();
        });
</script>